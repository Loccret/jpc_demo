[project]
name = "jpc"
version = "1.0.0"
description = "Flexible Inference for Predictive Coding Networks in JAX."
readme = "README.md"
requires-python =">=3.10"
license = {file = "LICENSE"}
authors = [
  {name = "Francesco Innocenti", email = "F.Innocenti@sussex.ac.uk"},
]
keywords = [
    "jax",
    "predictive-coding",
    "neural-networks",
    "hybrid-predictive-coding",
    "deep-learning",
    "local-learning",
    "inference-learning",
    "mupc"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
]
urls = {repository = "https://github.com/thebuckleylab/jpc"}
dependencies = [
    "jax>=0.4.38,<=0.5.2",  # to prevent jaxlib import error
    "equinox>=0.11.2",
    "diffrax>=0.6.0",
    "optax>=0.2.4",
    "jaxtyping>=0.2.24"
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build]
include = ["jpc/*"]

[tool.ruff]
extend-include = ["*.ipynb"]
src = []

[tool.ruff.lint]
fixable = ["I001", "F401"]
ignore = ["E402", "E721", "E731", "E741", "F722"]
ignore-init-module-imports = true
select = ["E", "F", "I001"]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
lines-after-imports = 2
order-by-type = false